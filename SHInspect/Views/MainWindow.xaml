<Window x:Class="SHInspect.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SHInspect"
        xmlns:views="clr-namespace:SHInspect.Views"
        xmlns:controls="clr-namespace:SHInspect.Controls"
        xmlns:converters="clr-namespace:SHInspect.Converters"
        xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
        mc:Ignorable="d"
        Height="750" Width="900">
    <Window.InputBindings>
        <KeyBinding Command="{Binding PreviousResultCommand}" Modifiers="Shift" Key="Tab"/>
        <KeyBinding Command="{Binding NextResultCommand}" Key="Tab"/>
    </Window.InputBindings>
    <Window.Resources>
        <converters:PatternTypeConverter x:Key="PatternTypeConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition MinWidth="100"></ColumnDefinition>
            <ColumnDefinition Width="3"></ColumnDefinition>
            <ColumnDefinition MinWidth="100"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <controls:SearchBox SearchCommand="{Binding SearchCommand}" SearchText="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            SearchTerms="{Binding SearchTerms}" SelectedSearchTerm="{Binding SelectedSearchTerm, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            PlaceHolderText="Search for something..." Grid.Column="0" Grid.Row="0" FontSize="15"  HorizontalAlignment="Stretch"/>
        <Button HorizontalAlignment="Right"  Height="30" Width="30" IsTabStop="False" Focusable="False" Background="Transparent" Margin="0,0,10,0"  BorderThickness="0" Grid.Row="0" Grid.Column="3"  Command="{Binding RefreshWindowsCommand}" ToolTip="Refresh Active Windows">
            <fa:IconImage Icon="SyncAlt" Focusable="False"/>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSettings}" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                
            </Button.Style>
        </Button>
        <views:SettingsView Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3">
            <views:SettingsView.Style>
                <Style TargetType="views:SettingsView">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSettings}" Value="True">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:SettingsView.Style>
        </views:SettingsView>
        <views:AutomationTreeView CopyXPathCommand="{Binding CopyXPathCommand}" SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Column="0" Grid.Row="1">
            <views:AutomationTreeView.Style>
                <Style TargetType="views:AutomationTreeView">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSettings}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </views:AutomationTreeView.Style>
        </views:AutomationTreeView>
        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" IsTabStop="False"  HorizontalAlignment="Stretch">
            <GridSplitter.Style>
                <Style TargetType="{x:Type GridSplitter}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSettings}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GridSplitter.Style>
        </GridSplitter>
        <Grid x:Name="PropertyGrid" Grid.Column="2" Grid.Row="0"  Grid.RowSpan="2" Background="LightGray" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid Height="{Binding ActualHeight, ElementName=PropertyGrid}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="200" MinHeight="100" MaxHeight="250" />
                    <RowDefinition Height="5" MinHeight="5"/>
                    <RowDefinition MinHeight="100"/>
                </Grid.RowDefinitions>
                <ContentControl Grid.Row="1"  MinHeight="100" MaxHeight="{Binding Path=Image.Height}" MaxWidth="1920" IsTabStop="False">
                    <Grid>
                        <Image Source="{Binding Path=Image}"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        <TextBlock Text="No Image" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Image}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Visible"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </ContentControl>
                <StackPanel Grid.RowSpan="2" Margin="0,0,10,0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <Button HorizontalAlignment="Right" IsTabStop="False" Height="40" Width="40" Background="Transparent"  BorderThickness="0" Grid.Row="0" Grid.Column="1"  Command="{Binding IsLiveCommand}">
                        <fa:IconBlock  FontSize="30">
                            <fa:IconBlock.Style>
                                <Style TargetType="{x:Type fa:IconBlock}">
                                    <Setter Property="Icon" Value="Eye"></Setter>
                                    <Setter Property="Foreground" Value="DarkRed"/>
                                    <Setter Property="ToolTip" Value="Auto Refresh On"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLive}" Value="False">
                                            <Setter Property="Icon" Value="EyeSlash"></Setter>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Setter Property="ToolTip" Value="Auto Refresh Off"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </fa:IconBlock.Style>
                        </fa:IconBlock>
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button HorizontalAlignment="Right" IsTabStop="False" Height="40" Width="40" Background="Transparent" BorderThickness="0" Grid.Row="0" Grid.Column="1"  Command="{Binding RefreshDetailsCommand}" ToolTip="Refresh Item Details" >
                        <fa:IconBlock Icon="SyncAlt" FontSize="20" />
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </StackPanel>

                <GridSplitter Height="3" Grid.Row="2" ResizeDirection="Rows" HorizontalAlignment="Stretch" Background="DarkGray" IsTabStop="False"></GridSplitter>
                <TabControl Grid.RowSpan="2" Grid.Row="3" VerticalAlignment="Stretch" x:Name="TabParent" >
                    <TabItem Header="Properties" IsTabStop="False">
                        <ListBox x:Name="PropertyListBox" Background="WhiteSmoke" ItemsSource="{Binding Properties}" Grid.IsSharedSizeScope="True"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Focusable="False" HorizontalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=PropertyListBox}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="FieldColumn"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox Text="{Binding Path=Key}" BorderThickness="1" FontWeight="Bold" IsReadOnly="True"  Padding="5,5,0,0"  HorizontalContentAlignment="Left" Focusable="False" Background="White" ToolTip="{Binding Path=Key}"/>
                                        <Button Grid.Column="1" Background="Transparent" BorderThickness="0,1,0,1" Command="{Binding DataContext.CopyValueCommand, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" CommandParameter="{Binding Path=Value}" ToolTip="Copy">
                                            <fa:IconBlock Icon="Copy" FontSize="18">
                                                <fa:IconBlock.Style>
                                                    <Style TargetType="fa:IconBlock">
                                                        <Setter Property="Foreground" Value="Gray"></Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                    </fa:IconBlock.Style>
                                            </fa:IconBlock>
                                        </Button>
                                        <TextBox Text="{Binding Path=Value}"  Padding="5" Grid.Column="2" IsTabStop="False" IsReadOnly="True" BorderThickness="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Background="White" Focusable="True"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" >
                                    <Setter Property="Focusable" Value="False"></Setter>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="{Binding Width, ElementName=TabParent}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                    <TabItem Header="Patterns" IsTabStop="False">
                        <ListBox x:Name="PatternListBox" BorderThickness="0" ItemsSource="{Binding Patterns}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid  Focusable="False"  HorizontalAlignment="Stretch" Width="{Binding ActualWidth, ElementName=PatternListBox}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="2*"/>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="6*"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBox Text="{Binding Path=Value}"  Padding="5" Grid.Column="2" IsReadOnly="True" IsTabStop="False" BorderThickness="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"  Focusable="True"/>
                                        <Button Grid.Column="1" Background="Transparent" BorderThickness="0,1,0,1" Command="{Binding DataContext.CopyValueCommand, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" CommandParameter="{Binding Path=Value}" ToolTip="Copy">
                                            <fa:IconBlock Icon="Copy" FontSize="18">
                                                <fa:IconBlock.Style>
                                                    <Style TargetType="fa:IconBlock">
                                                        <Setter Property="Foreground" Value="Gray"></Setter>

                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </fa:IconBlock.Style>
                                            </fa:IconBlock>
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PatternType, Converter={StaticResource PatternTypeConverter}}" Value="Field">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Grid.Column="1" Background="Transparent" BorderThickness="0,1,0,1" Command="{Binding DataContext.InvokeMethodCommand, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" CommandParameter="{Binding Path=Method}" ToolTip="Invoke">
                                            <fa:IconBlock Icon="Play" FontSize="18">
                                                <fa:IconBlock.Style>
                                                    <Style TargetType="fa:IconBlock">
                                                        <Setter Property="Foreground" Value="Green"></Setter>
                                                        <Style.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <Setter Property="Foreground" Value="LightGray"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </fa:IconBlock.Style>
                                            </fa:IconBlock>
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PatternType, Converter={StaticResource PatternTypeConverter}}" Value="Method">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <TextBox Text="{Binding Path=Key}" BorderThickness="1" FontWeight="Bold" Padding="5,5,0,0" Grid.Column="0" IsReadOnly="True" HorizontalAlignment="Stretch"  Focusable="False" ToolTip="{Binding Path=Key}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="Foreground" Value="Black"></Setter>
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                    <Style.Triggers>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSupported}" Value="True"></Condition>
                                                                <Condition Binding="{Binding PatternType}" Value="Header"></Condition>
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="Green"/>
                                                                <Setter Property="Grid.ColumnSpan" Value="3"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                <Setter Property="Background" Value="Lavender"/>
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                        <MultiDataTrigger>
                                                            <MultiDataTrigger.Conditions>
                                                                <Condition Binding="{Binding IsSupported}" Value="False"></Condition>
                                                                <Condition Binding="{Binding PatternType}" Value="Header"></Condition>
                                                            </MultiDataTrigger.Conditions>
                                                            <MultiDataTrigger.Setters>
                                                                <Setter Property="Foreground" Value="Red"/>
                                                                <Setter Property="Grid.ColumnSpan" Value="3"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                <Setter Property="Background" Value="Lavender"/>
                                                            </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem" >
                                    <Setter Property="Focusable" Value="False"></Setter>
                                    <Setter Property="Padding" Value="0"/>
                                    <Setter Property="Width" Value="{Binding ActualWidth, ElementName=PatternListBox}"/>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </TabItem>
                </TabControl>
            </Grid>
            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSettings}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
    </Grid>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="IsEnabled" Value="True"></Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSearching}" Value="True">
                    <Setter Property="IsEnabled" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
</Window>
