<UserControl x:Class="SHInspect.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Settings" />

        <GroupBox Header="Windows To Display">
            <ListBox ItemsSource="{Binding SavedSettingsWindows, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Grid.Row="0" Grid.Column="0" Margin="5" SelectedItem="{Binding SelectedExistingWindowItem, Mode=TwoWay}">
                <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Identifier}" />
                        </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        </GroupBox>
        <GroupBox Header="Active Windows" Grid.Row="0" Grid.Column="2">
            <ListBox ItemsSource="{Binding SettingsWindowList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="5" SelectedItem="{Binding SelectedCurrentWindowItem, Mode=TwoWay}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock >
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} {1}">
                                    <Binding Path="Name" />
                                    <Binding Path="AutomationId" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        </GroupBox>
        <GroupBox  Grid.Row="1" Grid.ColumnSpan="3" Margin="10">
        <Grid Grid.Row="1" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                    <RowDefinition  Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Height="20" Background="LightGray" Text="Automation Id"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Height="20" Background="LightGray" Text="Name" />
                <TextBox Grid.Row="1" Margin="0,0,0,10" Grid.Column="0" Height="20" IsReadOnly="True" Text="{Binding SelectedWindowItem.AutomationId}"/>
                <TextBox Grid.Row="1" Margin="0,0,0,10" Grid.Column="1" Height="20" IsReadOnly="True" Text="{Binding SelectedWindowItem.Name}" />
                <TextBox Grid.Column="0" Width="300" Grid.ColumnSpan="2" Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="WindowIdentifierBox" Padding="0" Text="{Binding IdentifierToAdd, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" />
                <TextBlock Grid.Column="0" Width="300" Grid.ColumnSpan="2" Grid.Row="2"  IsHitTestVisible="False"  Text="Window Identifier"  Padding="5,0,0,0"  VerticalAlignment="Center" HorizontalAlignment="Stretch"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=WindowIdentifierBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Button Grid.Column="0" Margin="0,5,2,0" HorizontalAlignment="Right" Width="200" Grid.Row="3" Command="{Binding AddWindowCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Content" Value="Add"></Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedWindowItem.IsCurrent}" Value="False">
                                    <Setter Property="Content" Value="Update"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedWindowItem}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Grid.Column="1" Margin="2,5,0,0" HorizontalAlignment="Left" Width="200" Grid.Row="3" Command="{Binding DeleteWindowCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Content" Value="Delete" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedWindowItem.IsCurrent}" Value="True">
                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding SelectedWindowItem}" Value="{x:Null}">
                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <GroupBox.Style>
                <Style TargetType="{x:Type GroupBox}">
                    <Setter Property="Header" Value="Add Window"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedWindowItem.IsCurrent}" Value="False">
                            <Setter Property="Header" Value="Edit Window"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </GroupBox.Style>
        </GroupBox>
        <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <CheckBox Content="Select Element With Mouse Hover" ToolTip="Use this mode to manually select elements when clicking closes the element ie popups" Grid.Column="1" IsChecked="{Binding HoverSelect,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" Margin="10,0,0,0"/>
            <TextBlock Text="Inspection Colour:" HorizontalAlignment="Right" Padding="20,0,0,0" Grid.Column="2"/>
            <xctk:ColorPicker Grid.Column="3" SelectedColor="{Binding SelectedColour,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" DisplayColorAndName="True" MinWidth="200"  Margin="10,0,0,0" HorizontalAlignment="Left" ShowStandardColors="False" ShowRecentColors="False"  ShowTabHeaders="False" />
            
        </Grid>
        <Button Content="Test Crash" Margin="5" Grid.ColumnSpan="3" HorizontalAlignment="Center" Width="200" Grid.Row="4" Command="{Binding CrashWindowCommand}"/>
    </Grid>
</UserControl>
