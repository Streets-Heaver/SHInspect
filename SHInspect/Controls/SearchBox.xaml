<UserControl x:Class="SHInspect.Controls.SearchBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             mc:Ignorable="d" x:Name="searchBox"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <ToggleButton Grid.Column="0" VerticalAlignment="Stretch" IsTabStop="False"  IsChecked="{Binding IsSettings}"  Padding="0"  BorderThickness="0" >
            <ToggleButton.Template>
                <ControlTemplate TargetType="{x:Type ToggleButton}"  >
                    <ContentControl Margin="4,0,4,0" IsTabStop="False" >
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="LightSkyBlue"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <fa:IconBlock Icon="Cog" FontSize="20"/>
                        </Grid>
                    </ContentControl>
                </ControlTemplate>
            </ToggleButton.Template>
        </ToggleButton>
        <TextBox Grid.Column="1" VerticalAlignment="Center" Focusable="True" IsTabStop="False" HorizontalAlignment="Stretch" x:Name="SearchTermTextBox" ToolTip="CTRL + F" Padding="0" Text="{Binding SearchText, ElementName=searchBox, UpdateSourceTrigger=PropertyChanged}" FontSize="{Binding FontSize, ElementName=searchBox}">
            <TextBox.InputBindings>
                <KeyBinding Key="Enter"  Command="{Binding SearchCommand, ElementName=searchBox}" />
            </TextBox.InputBindings>
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="IsEnabled" Value="True"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItemInTree}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>
        <TextBlock Grid.Column="1" IsHitTestVisible="False"  Text="{Binding PlaceHolderText, ElementName=searchBox}" FontSize="{Binding FontSize, ElementName=searchBox}" Padding="5,0,0,0"  VerticalAlignment="Center" HorizontalAlignment="Stretch"  Foreground="DarkGray">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=SearchTermTextBox}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <ComboBox Grid.Column="2" Width="150" Height="21" IsTabStop="False" HorizontalContentAlignment="Stretch" FontSize="12" VerticalContentAlignment="Center" ItemsSource="{Binding SearchTerms, ElementName=searchBox}" SelectedItem="{Binding SelectedSearchTerm, ElementName=searchBox, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
    </Grid>
</UserControl>
